{"version":3,"sources":["webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/module/login/login.module.ts","webpack:///./src/app/module/login/login.routes.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts"],"names":[],"mappings":"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","file":"module-login-login-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"login-box\\\">\\r\\n  <form [formGroup] = 'formModel' (ngSubmit) = 'submit()' novalidate class=\\\"login\\\">\\r\\n    <div class=\\\"form-group form-write1 form-write\\\" [class.has-error]=\\\"formModel.hasError('phone','phone')\\\">\\r\\n      <label for=\\\"phone\\\">手机号</label>\\r\\n      <input formControlName=\\\"phone\\\" type=\\\"text\\\" id=\\\"phone\\\" placeholder=\\\"请输入手机号\\\" class=\\\"form-control\\\"/>\\r\\n      <span class=\\\"form-text\\\" [class.hidden]=\\\"!formModel.hasError('phone','phone')\\\">\\r\\n      请输入合法的手机号\\r\\n    </span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group form-write\\\" [class.has-error]=\\\"formModel.hasError('password','password')\\\">\\r\\n      <label for=\\\"pass\\\">密 码</label>\\r\\n      <input formControlName=\\\"password\\\" type=\\\"password\\\" id=\\\"pass\\\" placeholder=\\\"请输入密码\\\" class=\\\"form-control\\\"/>\\r\\n      <span class=\\\"form-text\\\" [class.hidden]=\\\"!formModel.hasError('password','password')\\\">\\r\\n      请输入合法的密码\\r\\n    </span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group form-write\\\">\\r\\n      <input type=\\\"checkbox\\\" formControlName=\\\"protocol\\\" id=\\\"select\\\" class=\\\"form-control\\\"/>\\r\\n      <a href=\\\"www.baidu.com\\\" class=\\\"admin-select\\\">请阅读遵守《互联网安全协议》</a>\\r\\n    </div>\\r\\n    <div class=\\\"form-group form-write2\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" id=\\\"loginButton\\\">登录</button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group caption\\\">\\r\\n        <span>非用户登录，请先<a routerLink=\\\"/register\\\">注册</a></span>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {concat} from 'rxjs';\nimport {LoginService} from '../serve/login.service';\nimport {Router} from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formModel: FormGroup;\n  loginParams: string[];\n  constructor(private loginService: LoginService, private router: Router) {\n    const fb = new FormBuilder();\n    this.formModel = fb.group({\n      phone: ['', this.phoneValidator],\n      password: [null, this.passwordValidator],\n      protocol: ['' , this.protocolValidator]\n    });\n  }\n  phoneValidator(control: FormControl) {\n    const phone = control.value;\n    if (!phone) {\n      return null;\n    }\n    if (phone.length >= 3) {\n      return null;\n    } else {\n      return {phone : true};\n    }\n  }\n  passwordValidator(control: FormControl) {\n    const password = control.value;\n    if (!password) {\n      return null;\n    }\n    if (password.length > 3) {\n      return null;\n    } else {\n      return { password: true};\n    }\n  }\n  protocolValidator(control: FormControl) {\n    const protocol = control.value;\n    /*//console.log(protocol);*/\n  }\n  submit() {\n    if (this.formModel.value) {\n      console.log(this.formModel.value);\n      this.loginParams = this.formModel.value;\n    }\n    this.loginService.doLogin(this.formModel.value).subscribe({\n      next: (res) => {\n        // console.log(res.data[0].name);\n        if (res.status) {\n          this.router.navigate(['data']);\n          /*/!*将当前的登录信息存储*!/*/\n          res.data[0].ip = res.ip;\n          const user = JSON.stringify(res.data[0]);\n          // const ip  = JSON.stringify(res.ip);\n          console.log(user);\n          localStorage.setItem('user', user );\n          console.log('登录成功！');\n          // console.log(localStorage.getItem(res.data[0].name));\n        } else {\n          Swal('你还未登录，请先注册');\n          this.router.navigate(['register']);\n        }\n      }\n    });\n  }\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {LoginRoutes} from './login.routes';\nimport {LoginService} from '../../serve/login.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(<any>LoginRoutes)\n  ],\n  declarations: [],\n  providers: [LoginService],\n})\nexport class LoginModule { }\n","import {LoginComponent} from '../../login/login.component';\r\nimport {RegisterComponent} from '../../register/register.component';\r\n\r\nexport const LoginRoutes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n];\r\n","module.exports = \".vaildata-login{\\r\\n  position: absolute;\\r\\n  width: 5.5rem;\\r\\n  height: 2.4rem;\\r\\n  background-color: #cdcdcd;\\r\\n  right: 1rem;\\r\\n  display: block;\\r\\n  top: 32px;\\r\\n  line-height: 2.4rem;\\r\\n  color: #ffff;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.form-write {\\r\\n  position: relative;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"login-box\\\">\\n  <form [formGroup] = 'formModel' (ngSubmit) = 'submit()' novalidate class=\\\"login\\\" style=\\\"height: 22rem\\\">\\n    <div class=\\\"form-group form-write1 form-write\\\" [class.has-error]=\\\"formModel.hasError('phone','phone')\\\">\\n      <label for=\\\"phone\\\">手机号</label>\\n      <input formControlName=\\\"phone\\\" type=\\\"text\\\" id=\\\"phone\\\" placeholder=\\\"请输入手机号\\\" class=\\\"form-control\\\"/>\\n      <span class=\\\"vaildata-login\\\" (click)=\\\"sendMessage()\\\">{{noticeessage}}</span>\\n      <span class=\\\"form-text\\\" [class.hidden]=\\\"!formModel.hasError('phone','phone')\\\">\\n      请输入合法的手机号\\n    </span>\\n    </div>\\n    <div class=\\\"form-group form-write\\\" [class.has-error]=\\\"formModel.hasError('password','password')\\\">\\n      <label for=\\\"pass\\\">密 码</label>\\n      <input formControlName=\\\"password\\\" type=\\\"password\\\" id=\\\"pass\\\" placeholder=\\\"请输入密码\\\" class=\\\"form-control\\\"/>\\n      <span class=\\\"form-text\\\" [class.hidden]=\\\"!formModel.hasError('password','password')\\\">\\n      请输入合法的密码\\n    </span>\\n    </div>\\n    <div class=\\\"form-group form-write\\\">\\n      <label for=\\\"repass\\\">验证码</label>\\n      <input formControlName=\\\"message\\\" type=\\\"text\\\" id=\\\"repass\\\" placeholder=\\\"请输入验证码\\\" class=\\\"form-control\\\"/>\\n      <!--<span class=\\\"form-text\\\" [class.hidden]=\\\"!formModel.hasError('repass','repass')\\\">\\n      验证码不正确\\n    </span>-->\\n    </div>\\n    <div class=\\\"form-group form-write\\\">\\n      <input type=\\\"checkbox\\\" formControlName=\\\"protocol\\\" id=\\\"select\\\" class=\\\"form-control\\\"/>\\n      <a href=\\\"www.baidu.com\\\" class=\\\"admin-select\\\">请阅读遵守《互联网安全协议》</a>\\n    </div>\\n    <div class=\\\"form-group form-write2\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" id=\\\"loginButton\\\" style=\\\"margin-top: -1.5rem\\\">注册</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LoginService} from '../serve/login.service';\nimport {Http} from '@angular/http';\nimport {timer} from 'rxjs';\nimport {success} from 'element-angular/release/message/images';\nimport Swal from 'sweetalert2';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  /*显示内容*/\n  private noticeessage = '获取验证码';\n  /*是否再次点击*/\n  private otherClick = true;\n  /*数字的显示*/\n  private messageNum = 60;\n  /*定时器*/\n  private timer = null;\n  formModel: FormGroup;\n  registerParams: string[];\n  registerStaue: boolean;\n  constructor(private loginService: LoginService, private http: Http, private router: Router) {\n    const fb = new FormBuilder();\n    this.formModel = fb.group({\n      phone: ['', this.phoneValidator],\n      password: [null, this.passwordValidator],\n      protocol: ['' , this.protocolValidator],\n      message: ['', Validators.required]\n    });\n  }\n  /*用户名的校验器*/\n  phoneValidator(control: FormControl) {\n    const phone = control.value;\n    if (!phone) {\n      return null;\n    }\n    if (phone.length >= 11) {\n      return null;\n    } else {\n      return {phone : true};\n    }\n  }\n  /*密码的校验器*/\n  passwordValidator(control: FormControl) {\n    const password = control.value;\n    if (!password) {\n      return null;\n    }\n    if (password.length > 3) {\n      return null;\n    } else {\n      return { password: true};\n    }\n  }\n  /*用户是否同意协议的校验器*/\n  protocolValidator(control: FormControl) {\n    const protocol = control.value;\n    /*//console.log(protocol);*/\n  }\n  /*短信码的校验器*/\n  repassValidator(control: FormControl) {\n    let repass = control.value;\n    if (!repass) {\n      return null;\n    }\n    console.log(repass.length);\n    if (repass.length = 5) {\n      // noinspection JSAnnotator\n      repass = control.value;\n      this.loginService.regNumber(repass).subscribe(\n        status => {\n            console.log(status);\n            if (status) {\n              return null;\n            }\n        }\n      );\n    } else {\n      return { repass: true};\n    }\n  }\n  submit() {\n    if (this.formModel.value) {\n      this.registerParams = this.formModel.value;\n    }\n    this.loginService.register(this.registerParams).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === true) {\n          Swal('注册成功', '请登录', 'success').then(value => {\n            this.router.navigate(['/']);\n          });\n        } else if (res.status === 'message') {\n          Swal('验证码错误', '请重新注册', 'error');\n        } else if (res.status === 'same') {\n          Swal('你已经注册过', '请直接登录', 'error').then(value => {\n            this.router.navigate(['/']);\n          });\n        } else {\n          Swal('未知错误', '请联系管理员', 'error');\n        }\n      },\n      error: (err) => {\n        Swal('注册失败', '请联系管理员', 'error');\n      }\n    });\n  }\n  ngOnInit() {\n  }\n  /*获取验证码*/\n  private sendMessage(): void {\n    if (this.otherClick) {\n      this.otherClick = false;\n      this.loginService.regNumber((this.formModel.value).phone).subscribe({\n        next: (res) => {\n          console.log(res);\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      });\n      this.timer = setInterval(() => {\n        this.messageNum--;\n        this.noticeessage = this.messageNum + 's后重发';\n        if (this.messageNum <= 1) {\n          this.otherClick = true;\n          clearInterval(this.timer);\n          this.noticeessage = '获取验证码';\n        }\n      }, 1000);\n    }\n  }\n\n}\n"],"sourceRoot":""}